            <td>{{ item.ats_status }}</td>
            <td><a href="{{ item.ats_link }}" target="_blank">ATS_LINK</a></td>
            <td>{{ item.owner }}</td>
            <td><a href="{{ item.pipeline }}" target="_blank">PIPELINE</a></td>

import subprocess
import re
import mysql.connector

def get_prometheus_service_port():
    """
    Fetch the Prometheus service port using kubectl command.
    """
    try:
        # Run the kubectl command to get the Prometheus service details
        svc_output = subprocess.check_output(
            ["kubectl", "get", "svc", "-n", "occne-infra", "|", "grep", "prometheus-server"],
            universal_newlines=True
        )

        # Extract the port number using regex
        match = re.search(r"(\d+):\d+/TCP", svc_output)
        if match:
            port = match.group(1)
            return port
        else:
            print("Port number not found in service output.")
            return None

    except subprocess.CalledProcessError as e:
        print(f"Error fetching Prometheus service port: {e}")
        return None

def get_first_node_ip():
    """
    Fetch the IP address of the first node using kubectl command.
    """
    try:
        # Run the kubectl command to get node details
        node_output = subprocess.check_output(
            ["kubectl", "get", "nodes", "-o", "wide"],
            universal_newlines=True
        )

        # Extract the IP address of the first node
        lines = node_output.splitlines()
        first_node_line = lines[1]
        node_ip = first_node_line.split()[5]
        return node_ip

    except subprocess.CalledProcessError as e:
        print(f"Error fetching node IP: {e}")
        return None

def save_prometheus_url_to_db(prometheus_url):
    """
    Save the Prometheus URL to the database.
    """
    try:
        # Database connection details (replace with your own)
        connection = mysql.connector.connect(
            host="your_db_host",
            user="your_db_user",
            password="your_db_password",
            database="your_db_name"
        )
        cursor = connection.cursor()

        # Insert or update the Prometheus URL in the database
        cursor.execute("""
            INSERT INTO namespace (namespace, url)
            VALUES (%s, %s)
            ON DUPLICATE KEY UPDATE url = VALUES(url)
        """, ('prometheus', prometheus_url))

        connection.commit()
        print("Prometheus URL saved to database.")

    except mysql.connector.Error as e:
        print(f"Database error: {e}")

    finally:
        if connection.is_connected():
            cursor.close()
            connection.close()

def main():
    # Fetch the Prometheus service port and the first node IP
    port = get_prometheus_service_port()
    node_ip = get_first_node_ip()

    if port and node_ip:
        # Construct the Prometheus URL
        prometheus_url = f"http://{node_ip}:{port}"

        # Save the Prometheus URL to the database
        save_prometheus_url_to_db(prometheus_url)

if __name__ == "__main__":
    main()
