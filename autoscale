import requests
import json

def fetch_cpu_requests(prometheus_url):
    """
    Fetches CPU requests data from Prometheus.

    Parameters:
    prometheus_url (str): The URL of the Prometheus server.

    Returns:
    dict: The JSON response from Prometheus containing the query results.
    """

    # Prometheus query for CPU requests
    query = 'sum(kube_pod_container_resource_requests_cpu_cores) by (namespace, pod, container)'

    # Define the URL for the query API
    api_url = f"{prometheus_url}/api/v1/query"

    # Parameters to be sent to the API
    params = {
        'query': query
    }

    try:
        # Send the HTTP GET request
        response = requests.get(api_url, params=params)

        # Raise an exception for HTTP errors
        response.raise_for_status()

        # Parse the JSON response
        data = response.json()

        # Check for Prometheus API errors
        if data.get('status') != 'success':
            print("Error in Prometheus query:", data.get('error'))
            return None

        # Return the data part of the response
        return data['data']['result']

    except requests.exceptions.RequestException as e:
        print(f"Error fetching data from Prometheus: {e}")
        return None

# Example usage
prometheus_url = 'http://localhost:9090'
cpu_requests_data = fetch_cpu_requests(prometheus_url)

if cpu_requests_data:
    print(json.dumps(cpu_requests_data, indent=4))
