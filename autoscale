import requests

# Replace these with your details
GITLAB_API_URL = "https://gitlab.com/api/v4"  # Replace with your GitLab API URL if self-hosted
PROJECT_ID = "<your_project_id>"  # Replace with your GitLab project ID
MERGE_REQUEST_IID = "<your_merge_request_iid>"  # Replace with the IID of the MR
GITLAB_ACCESS_TOKEN = "<your_personal_access_token>"  # Replace with your GitLab token

def get_commits_with_merge_branch():
    # Headers for authentication
    headers = {"Private-Token": GITLAB_ACCESS_TOKEN}

    # Get all commits from the merge request
    commits_url = f"{GITLAB_API_URL}/projects/{PROJECT_ID}/merge_requests/{MERGE_REQUEST_IID}/commits"
    response = requests.get(commits_url, headers=headers)

    if response.status_code != 200:
        print(f"Failed to fetch commits: {response.status_code} {response.text}")
        return

    commits = response.json()

    # Check if any commit message contains "Merge branch"
    for commit in commits:
        if "Merge branch" in commit["message"]:
            print(f"Commit with 'Merge branch' found:")
            print(f"Commit ID: {commit['id']}")
            print(f"Message: {commit['message']}")
            print(f"Author: {commit['author_name']} <{commit['author_email']}>")
            print(f"Date: {commit['created_at']}")
            print("-" * 50)

if __name__ == "__main__":
    get_commits_with_merge_branch()
