def insert_new_status(cursor, kwargs: dict) -> None:
    """Inserts a new namespace status record into the database."""
    query = """
        INSERT INTO namespace_status (
            nf_type, release_tag, ats_release_tag, namespace, is_csar, is_asm, is_tgz, is_internal_ats,
            is_occ, is_pcf, is_converged, is_pcrf, upg_phase, play_id, tls_version, upg_rollback, official_build, 
            priority, status, allocation_lock, owner, custom_message, cpu_estimate, parallel_count
        ) VALUES (
            %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, 'NO', %s, %s, %s, %s
        )
    """
    params = (
        kwargs['nf_type'], kwargs['release_tag'], kwargs['ats_release_tag'], kwargs['namespace'],
        kwargs['is_csar'], kwargs['is_asm'], kwargs['is_tgz'], kwargs['is_internal_ats'], kwargs['is_occ'],
        kwargs['is_pcf'], kwargs['is_converged'], kwargs['is_pcrf'], kwargs['upg_phase'], kwargs['play_id'],
        kwargs['tls_version'], kwargs['upg_rollback'], kwargs['official_build'], kwargs['priority'],
        kwargs['status'], kwargs['owner'], kwargs['custom_message'], kwargs['cpu_estimate'], kwargs['parallel_count']
    )
    execute_query(cursor, query, params)
    logging.info(f"Added NF '{kwargs['nf_type']}' with parallel_count '{kwargs['parallel_count']}' "
                 f"for release tag '{kwargs['release_tag']}' in the database.")
