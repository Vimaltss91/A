#!/bin/bash

namespace="your-namespace"

deployments=$(kubectl get deployments -n "$namespace" -o jsonpath='{.items[*].metadata.name}')

for deployment in $deployments; do
    if [[ $deployment == *"$namespace"* ]]; then
        cat <<EOF | kubectl apply -f -
apiVersion: autoscaling.k8s.io/v1
kind: VerticalPodAutoscaler
metadata:
  name: vpa-$deployment
  namespace: $namespace
spec:
  targetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: $deployment
  updatePolicy:
    updateMode: "Auto"
EOF
        echo "VPA applied to $deployment"
    else
        echo "Skipping $deployment as it doesn't contain $namespace in the name"
    fi
done

apiVersion: autoscaling.k8s.io/v1
kind: VerticalPodAutoscaler
metadata:
  name: my-vpa
spec:
  targetRef:
    apiVersion: "apps/v1"
    kind:       "Deployment"
    name:       "my-deployment"
  updatePolicy:
    updateMode: "Auto"
  resourcePolicy:
    containerPolicies:
    - containerName: "*"
      minAllowed:
        cpu:    100m
        memory: 128Mi
      maxAllowed:
        cpu:    0
        memory: 0
        
       
kubectl get pods --namespace <namespace> -o jsonpath='{range .items[*]}{.metadata.name}{"\n"}{range .spec.containers[*]}{.name}{"\t"}{.resources.requests.cpu}{"\t"}{.resources.limits.cpu}{"\n"}{end}{"\n"}{end}'

kubectl get nodes -o json | jq '.items[] | {name: .metadata.name, allocatable_pods: .status.allocatable.pods, total_pods: .status.capacity.pods}'

kubectl get nodes -o custom-columns=NAME:.metadata.name,PODS:.status.capacity.pods,ALLOCATED:.status.allocatable.pods

kubectl get pods -o=jsonpath='{range .items[*]}{.spec.nodeName}:{.status.phase}{"\n"}{end}' | awk '{count[$1]++} END {for (i in count) print i, count[i]}'

