curl --header "Private-Token: <your_private_token>" "https://gitlab.com/api/v4/projects/<namespace%2Fproject_name>/repository/commits"


import requests

# Define constants
GITLAB_URL = 'https://gitlab.example.com'  # Your GitLab instance URL
PRIVATE_TOKEN = 'your_personal_access_token'
PROJECT_ID = 'your_project_id'  # You can find this in your project settings

def get_commits_between_tags(tag1, tag2):
    headers = {'Private-Token': PRIVATE_TOKEN}
    url = f'{GITLAB_URL}/api/v4/projects/{PROJECT_ID}/repository/commits'
    params = {
        'ref_name': 'dev',  # Assuming you're merging into the dev branch
        'since': f"{tag1}",
        'until': f"{tag2}",
    }
    response = requests.get(url, headers=headers, params=params)
    response.raise_for_status()
    return [commit['id'] for commit in response.json()]

def get_merge_requests():
    headers = {'Private-Token': PRIVATE_TOKEN}
    url = f'{GITLAB_URL}/api/v4/projects/{PROJECT_ID}/merge_requests'
    params = {
        'state': 'merged',
        'order_by': 'created_at',
        'sort': 'desc',
    }
    response = requests.get(url, headers=headers, params=params)
    response.raise_for_status()
    return response.json()

def find_mrs_for_commits(commits):
    mrs = get_merge_requests()
    filtered_mrs = []

    for mr in mrs:
        if any(commit in mr['merge_commit_sha'] for commit in commits):
            filtered_mrs.append(mr)

    return filtered_mrs

if __name__ == '__main__':
    tag1 = '1.0.0'
    tag2 = '2.0.0'

    commits_between_tags = get_commits_between_tags(tag1, tag2)
    mrs = find_mrs_for_commits(commits_between_tags)
    
    for mr in mrs:
        print(f"MR Title: {mr['title']}, MR URL: {mr['web_url']}")
