import requests
import logging

def fetch_total_cpu_requests_from_prometheus(prometheus_url, timeout=10):
    """Fetches the total CPU requests from Prometheus."""
    # Extract the IP from the URL
    ip_address = prometheus_url.split("//")[1].split(":")[0]

    # Configure no_proxy directly in the request
    proxies = {
        "http": None,
        "https": None,
        "no_proxy": ip_address  # Add IP to bypass proxy for this specific request
    }

    query = 'sum(kube_pod_container_resource_requests{resource="cpu",node=~".*"})'
    api_url = f"{prometheus_url}/api/v1/query"
    params = {'query': query}

    try:
        response = requests.get(api_url, params=params, timeout=timeout, proxies=proxies)
        response.raise_for_status()
        data = response.json()

        if data.get('status') != 'success':
            logging.error(f"Error in Prometheus query: {data.get('error')}")
            return None

        result = data['data']['result']

        if result:
            total_cpu_request = float(result[0]['value'][1])
            logging.info(f"Fetched total CPU requests: {total_cpu_request} cores.")
            return total_cpu_request
        else:
            logging.warning("No data returned by Prometheus query.")
            return None

    except requests.exceptions.RequestException as e:
        logging.error(f"Error fetching data from Prometheus: {e}")
        return None
