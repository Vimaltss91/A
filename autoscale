<td>
    <select ng-model="item.newPriority" ng-change="overwritePriority(item.namespace, item.newPriority)" class="overwrite-priority-dropdown">
        <option value="Critical">Critical</option>
        <option value="VeryHigh">VeryHigh</option>
        <option value="High">High</option>
        <option value="Medium">Medium</option>
        <option value="Low">Low</option>
    </select>
</td>


// Function to overwrite priority
$scope.overwritePriority = function(namespace, newPriority) {
    if (confirm("Are you sure you want to overwrite the priority for the namespace: " + namespace + " to " + newPriority + "?")) {
        // Show a loading indicator or disable the dropdown during the update (optional)
        $scope.namespaceStatuses.find(ns => ns.namespace === namespace).updating = true;

        $http.post('http://localhost:3000/myapp/api/overwrite-priority/', { namespace: namespace, priority: newPriority })
            .then(function(response) {
                alert(response.data.message); // Show alert with backend response

                $scope.getNamespaceStatuses(); // Refresh the namespace statuses after priority overwrite
            }, function(error) {
                alert("Error overwriting priority for namespace: " + namespace);
                // Revert any UI changes if there's an error
                $scope.namespaceStatuses.find(ns => ns.namespace === namespace).updating = false;
            });
    }
};
