The Jetty source code can be downloaded from the open-source repository on GitHub. After making the necessary changes, the updated code can be pushed to our repository. Further modifications can be made in the feature branch to ensure the custom-built library is pulled from our repository.










Common services are components provided by the policy team and shared with other NFs. After building the common service, the release tag is incremented to the next version, such as 25.1.101. Examples of these common services include appinfo, audit, cmservice, and diam-connector. These services use the shared release tag 25.1.101 for the current build.


def _handle_dynamic_namespace(self, cursor, kwargs: Dict) -> None:
    """
    Handles the insertion or update of dynamic namespaces.
    """
    existing_rows = get_existing_status(cursor, kwargs)
    row_count = len(existing_rows)

    if existing_rows:
        for existing_row in existing_rows:
            if existing_row:
                s_no, status, namespace, priority, report, release_tag, ats_release_tag = existing_row

                if status == 'ASSIGNED':
                    logging.info(f"Namespace {namespace} has already been assigned.")
                elif status == 'HARDCODE':
                    logging.info(f"Namespace {namespace} has already been Hardcoded.")
                else:
                    update_existing_status(cursor, s_no, "YET TO ASSIGN")

        # Insert missing parallel counts based on the number of existing rows
        if kwargs['parallel_execution'] == "YES":
            if row_count < 3:
                for count in range(row_count + 1, 4):  # Start from the next count and go to 3
                    kwargs['parallel_count'] = count
                    insert_new_status(cursor, kwargs)
                    logging.info(f"Inserted new status for parallel_count = {count}")
    else:
        # No existing rows, insert for all parallel counts if parallel_execution is "YES"
        kwargs['status'] = 'YET TO ASSIGN'
        kwargs['namespace'] = ''
        if kwargs['parallel_execution'] == "YES":
            for count in range(1, 4):
                kwargs['parallel_count'] = count
                insert_new_status(cursor, kwargs)
                logging.info(f"Inserted new status for parallel_count = {count}")
        else:
            insert_new_status(cursor, kwargs)
            logging.info("Inserted new status for non-parallel execution")




Both Hotfix-24.2.3 and 24.3.x-patch branches are referencing the 24.2.x-SNAPSHOT JAR version, which causes a conflict.

OCNGF-67375: Branch created from Hotfix.
OCNGF-67387: Branch created from 24.3.x-patch.
We should create a bug to align the JAR versions for each branch.
