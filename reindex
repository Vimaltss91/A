<!DOCTYPE html>
<html lang="en" ng-app="BuildDeploymentTestApp">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Build, Deployment, Test UI</title>
    <link rel="stylesheet" href="styles.css">
    <script src="https://ajax.googleapis.com/ajax/libs/angularjs/1.8.2/angular.min.js"></script>
    <script src="app.js"></script>
</head>
<body ng-controller="BuildDeploymentTestController">

    <div class="container" ng-hide="loggedIn">
        <h2>Login</h2>
        <form ng-submit="login()">
            <label for="username">Username</label>
            <input type="text" id="username" ng-model="loginData.username" required>
            <label for="password">Password</label>
            <input type="password" id="password" ng-model="loginData.password" required>
            <button type="submit">Login</button>
        </form>
        <p ng-show="loginError">{{ loginError }}</p>
    </div>

    <div class="container" ng-show="loggedIn">
        <!-- Your existing content here -->
        ...
    </div>

</body>
</html>




var app = angular.module('BuildDeploymentTestApp', []);

app.controller('BuildDeploymentTestController', function($scope, $http) {
    // Initialization
    $scope.loggedIn = false;
    $scope.loginData = {};
    $scope.loginError = '';

    // Login function
    $scope.login = function() {
        $http.post('/api/login', $scope.loginData)
            .then(function(response) {
                if (response.data.success) {
                    $scope.loggedIn = true;
                    $scope.loginError = '';
                } else {
                    $scope.loginError = 'Invalid username or password';
                }
            })
            .catch(function(error) {
                $scope.loginError = 'An error occurred';
            });
    };

    // Your existing controller code here
    ...
});


const express = require('express');
const mysql = require('mysql');
const bodyParser = require('body-parser');
const bcrypt = require('bcryptjs');
const app = express();

app.use(bodyParser.json());

// MySQL connection setup
const db = mysql.createConnection({
    host: 'localhost',
    user: 'root',
    password: 'your_mysql_password',
    database: 'userdb'
});

db.connect((err) => {
    if (err) throw err;
    console.log('Connected to MySQL database');
});

// Login endpoint
app.post('/api/login', (req, res) => {
    const { username, password } = req.body;
    const sql = 'SELECT * FROM users WHERE username = ?';
    db.query(sql, [username], (err, results) => {
        if (err) throw err;
        if (results.length > 0) {
            const user = results[0];
            bcrypt.compare(password, user.password, (err, isMatch) => {
                if (err) throw err;
                if (isMatch) {
                    res.json({ success: true });
                } else {
                    res.json({ success: false });
                }
            });
        } else {
            res.json({ success: false });
        }
    });
});

// Start the server
const PORT = process.env.PORT || 3000;
app.listen(PORT, () => {
    console.log(`Server running on port ${PORT}`);
});
