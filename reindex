#!/bin/bash

# Define the URL of the file to download
file_url="https://example.com/path/to/your/file.txt"

# Define the tag or condition you want to check in the file
desired_tag="your_tag_here"

# Maximum number of retry attempts
max_retries=5

# Retry interval in seconds (2 minutes)
retry_interval=120

# Loop through the download and check process
for ((attempt = 1; attempt <= max_retries; attempt++)); do
    # Download the file
    wget -O downloaded_file.txt "$file_url"
    
    # Check if the tag is present in the downloaded file
    if grep -q "$desired_tag" downloaded_file.txt; then
        echo "Tag found in the file! Exiting..."
        exit 0
    else
        echo "Tag not found in attempt $attempt. Retrying in 2 minutes..."
        sleep $retry_interval
    fi
done

# If the tag is not found after all retries, exit with an error code
echo "Tag not found after $max_retries attempts. Exiting..."
exit 1
awk '/karate/ {count++} count == 2 {flag=1; next} count == 3 {flag=0} flag && flag++ <= 5' filename

awk -v pattern="karate" 'index($0, pattern) {count++} count == 2 {print; next} count == 2 && !index($0, pattern) {count = 0} count > 0 && count <= 5 {print}' filename


if comm -23 <(sort File1) <(sort File2) | diff - File2 >/dev/null; then
    echo "Pass"
else
    echo "Fail"
fi

if comm -23 <(sed 's/^[[:space:]]*//;s/[[:space:]]*$/' File1 | sort) <(sed 's/^[[:space:]]*//;s/[[:space:]]*$/' File2 | sort) | diff - File2 >/dev/null; then
    echo "Pass"
else
    echo "Fail"
fi

#!/bin/bash

if comm -23 <(sed 's/^[[:space:]]*//;s/[[:space:]]*$/' File1 | sort) <(sed 's/^[[:space:]]*//;s/[[:space:]]*$/' File2 | sort) | diff - File2 >/dev/null; then
    echo "Pass"
else
    echo "Fail"
fi

#!/bin/bash

# Get the contents of the two files
file1_contents=$(cat file1)
file2_contents=$(cat file2)

# Create an array of the contents of file2
file2_array=(${file2_contents})

# Iterate over the contents of file2 and check if each line is present in file1
for line in "${file2_array[@]}"; do
  if [[ ! $file1_contents =~ $line ]]; then
    echo "fail"
    exit 1
  fi
done

# If we reach this point, then all of the lines in file2 are present in file1
echo "pass"


#!/bin/bash

# Get the paths to the two files
file1_path="$1"
file2_path="$2"

# Check if both files exist
if [[ ! -f "$file1_path" ]]; then
  echo "File $file1_path does not exist."
  exit 1
fi

if [[ ! -f "$file2_path" ]]; then
  echo "File $file2_path does not exist."
  exit 1
fi

# Iterate over the lines in file2
while read line; do
  # Check if the line is present in file1
  if [[ ! $(grep -Fx "$line" "$file1_path") ]]; then
    # If the line is not present in file1, print it to the console
    echo "$line"
  fi
done < "$file2_path"

curl -u username:password -X GET https://your-artifactory-url/api/docker/<repository>/v2/<image>/blobs/<digest>

Subject: Re: Missing Breakdown of Package Charges for Procedure Treatment

Dear [Recipient's Name],

I hope this message finds you well. I recently received your email regarding the missing breakdown of the package charges for the single procedure treatment I underwent. I understand your concern and would like to clarify that in this particular case, the hospital has provided a consolidated final receipt, and there were no individual itemized charges associated with the treatment.

I can certainly appreciate the importance of having a detailed breakdown for your records and verification. I would like to offer the following information to assist you:

Date of Treatment: [Insert the date of the procedure]
Patient Name: [Insert your full name]
Hospital Name: [Insert the name of the hospital]
Procedure Description: [Specify the procedure]
If there are any additional details or specific information you require, please let me know, and I will do my best to provide it. I understand the need for transparency and accountability in healthcare billing, and I want to ensure that you have all the necessary information to process the claim accurately.

If there are any specific forms or documents that need to be filled out on my end, please guide me, and I will complete them promptly to expedite the resolution of this matter.

Thank you for your understanding, and I look forward to your guidance on the next steps in addressing this issue. Please feel free to contact me at [Your Contact Information] for any further assistance or clarifications.

Warm regards,

[Your Name]
