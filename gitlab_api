#!/bin/bash

# Set your GitLab access token and project ID
GITLAB_TOKEN="YOUR_ACCESS_TOKEN"
PROJECT_ID="YOUR_PROJECT_ID"
PIPELINE_ID="YOUR_PIPELINE_ID"

# API endpoint to get pipeline details
API_URL="https://gitlab.com/api/v4/projects/$PROJECT_ID/pipelines/$PIPELINE_ID/jobs"

# Function to check if any job is in running state
function check_running_jobs {
  RUNNING_JOBS=$(echo "$1" | jq -r '.[] | select(.status == "running") | .name')
  if [ -n "$RUNNING_JOBS" ]; then
    echo "Waiting for running jobs to complete..."
    sleep 180  # Wait for 3 minutes
  fi
}

# Function to get failed jobs
function get_failed_jobs {
  JOBS=$(curl --header "PRIVATE-TOKEN: $GITLAB_TOKEN" "$API_URL")
  FAILED_JOBS=$(echo "$JOBS" | jq -r '.[] | select(.status == "failed") | .name')
  echo "$FAILED_JOBS"
}

# Check if any job is running and wait if needed
while true; do
  RUNNING_JOBS=$(curl --header "PRIVATE-TOKEN: $GITLAB_TOKEN" "$API_URL" | jq -r '.[] | select(.status == "running")')
  if [ -n "$RUNNING_JOBS" ]; then
    check_running_jobs "$RUNNING_JOBS"
  else
    break
  fi
done

# Get and print the list of failed jobs
FAILED_JOBS=$(get_failed_jobs)
if [ -n "$FAILED_JOBS" ]; then
  echo "Failed jobs in pipeline $PIPELINE_ID:"
  echo "$FAILED_JOBS"
else
  echo "No failed jobs in pipeline $PIPELINE_ID."
fi
