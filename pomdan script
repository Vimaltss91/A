import subprocess

# List Podman images
def list_images():
    cmd = ['podman', 'images', '--format', '{{.ID}}']
    result = subprocess.run(cmd, capture_output=True, text=True)
    if result.returncode == 0:
        return result.stdout.strip().split('\n')
    else:
        print('Failed to list images:')
        print(result.stderr)
        return []

# Retag images from docker.io to localhost
def retag_images(images):
    for image in images:
        cmd = ['podman', 'image', 'inspect', '-f', '{{.RepoDigests}}', image]
        result = subprocess.run(cmd, capture_output=True, text=True)
        if result.returncode == 0:
            digest = result.stdout.strip().replace('[', '').replace(']', '').split('@')[1]
            new_image = image.replace('docker.io', 'localhost') + '@' + digest
            cmd = ['podman', 'image', 'tag', image, new_image]
            result = subprocess.run(cmd, capture_output=True, text=True)
            if result.returncode == 0:
                print(f'Retagged image {image} to {new_image}')
            else:
                print(f'Failed to retag image {image}:')
                print(result.stderr)
        else:
            print(f'Failed to inspect image {image}:')
            print(result.stderr)

# Delete images that start with docker.io
def delete_images(images):
    for image in images:
        if image.startswith('docker.io'):
            cmd = ['podman', 'image', 'rm', '-f', image]
            result = subprocess.run(cmd, capture_output=True, text=True)
            if result.returncode == 0:
                print(f'Deleted image {image}')
            else:
                print(f'Failed to delete image {image}:')
                print(result.stderr)

# Main function
def main():
    images = list_images()
    if images:
        retag_images(images)
        delete_images(images)

# Run the script
if __name__ == '__main__':
    main()
